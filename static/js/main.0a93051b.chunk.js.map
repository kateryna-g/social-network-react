{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","assets/images/user.png","assets/images/load.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.js","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","validate","required","component","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","backgroundColor","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.0a93051b.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Katarina'},\n        {id: 2, name: 'Serhio'},\n        {id: 3, name: 'Tanya'},\n        {id: 4, name: 'Sveta'},\n        {id: 5, name: 'Alexey'},\n        {id: 6, name: 'Iren'},\n        {id: 7, name: 'Lora'},\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'},\n        {id: 6, message: 'Yo'},\n    ],\n\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 7, message: body}],\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\n\nexport default dialogsReducer;\n","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': \"b6f1f840-0615-47fa-aac3-19afc3691c95\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please use profileAPI object.')\n        return profileAPI.getProfile(userId)\n\n    }\n}\n\n\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status} );\n    }\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\"};","module.exports = __webpack_public_path__ + \"static/media/user.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/load.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n        </div>\n        <div className={s.item}>\n            <a>News</a>\n        </div>\n        <div className={s.item}>\n            <a>Music</a>\n        </div>\n        <div className={s.item}>\n            <a>Settings</a>\n        </div>\n    </nav>\n}\nexport default Navbar;\n","\n\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps};\n        }\n        return u;\n    })\n\n}\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n\n            }\n\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_USERS_TOTAL_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\n\nexport default usersReducer;\n","import React, {useState} from \"react\";\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n\n        {portionNumber > 1 &&\n        <button onClick={() => {\n            setPortionNumber(portionNumber - 1)\n        }}>prev</button>}\n\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map(p => {\n                return <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p)\n                             }}> {p} </span>\n            })}\n\n        {portionCount > portionNumber &&\n        <button onClick={() => {\n            setPortionNumber(portionNumber + 1)\n        }}>next</button>\n        }\n\n    </div>\n}\n\n\nexport default Paginator;\n","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, follow, unfollow }) => {\n    return (\n        <div>\n        <span>\n            <div>\n\n             <NavLink to={\"/profile/\" + user.id}>\n                <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\n            </NavLink>\n\n            </div>\n            <div>\n                {user.followed\n                    ? <button disabled={followingInProgress\n                        .some(id => id === user.id)} onClick={() => {\n                       unfollow(user.id);\n                    }}>Unfollow</button>\n                    : <button disabled={followingInProgress\n                        .some(id => id === user.id)} onClick={() => {\n                        follow(user.id);\n                    }}>Follow</button>}\n            </div>\n        </span>\n            <span>\n           <span>\n               <div>{user.name}</div>\n               <div>{user.status}</div>\n           </span>\n            <span>\n                <div>{\"u.location.country\"}</div>\n                <div>{\"u.location.city\"}</div>\n            </span>\n        </span>\n\n        </div>)\n\n}\n\n\nexport default User;\n","import React from \"react\";\nimport Paginator from '../common/Paginator/Paginator'\nimport User from \"./User\";\n\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\n    return (\n        <div>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n            <div>\n                {\n                    users.map(u => <User user={u} key={u.id}\n                                         followingInProgress={props.followingInProgress}\n                                         follow={props.follow}\n                                         unfollow={props.unfollow}/>\n                    )\n                }\n            </div>\n        </div>)\n}\n\n\nexport default Users;\n","import {createSelector} from \"reselect\";\n\n\n\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector( getUsersSelector,\n    (users) => {\n    return users.filter(u => true);\n})\n\n\n\n\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n\n        const {currentPage, pageSize } = this.props;\n\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n\n        const {pageSize} = this.props;\n\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n\n            />\n        </>\n    };\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        // users: getUsersSuperSelector(state),\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    // withAuthRedirect,\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage,\n        toggleFollowingProgress, getUsers: requestUsers\n    })\n)(UsersContainer)\n","import React from \"react\";\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className= {s.header}>\n        <img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/1024px-Instagram_logo_2016.svg.png\"\n            alt=\"\"/>\n\n            <div className={s.loginBlock}>\n                { props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                    :  <NavLink to={'/login'}>Login</NavLink>}\n\n            </div>\n    </header>\n}\n\nexport default Header;\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n        dispatch(stopSubmit('login', {_error: message}));\n    }\n\n}\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n\n}\n\nexport default authReducer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport style from \"./../common/FormsControls/FormControls.module.css\"\nimport {Redirect} from \"react-router-dom\";\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={'email'} name={'email'} validate={[required]} component={Input}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} name={'password'} type={'password'} validate={[required]} component={Input}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}/> remember me\n            </div>\n\n            { error && <div className={style.formSummaryError}>\n                {error}\n            </div>}\n\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect (mapStateToProps, { login })(Login);\n","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n\n        });\n\n}\n\n\nexport default appReducer;\n","let initialState = {}\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default sidebarReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from \"redux-form\"\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage :profileReducer,\n    dialogsPage :dialogsReducer,\n    sidebar :sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n\n});\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers( applyMiddleware(thunkMiddleware) ));\n\n\n\nwindow.__store__ = store;\n\n\nexport default store;\n","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n// import Redirect from \"react-router-dom/es/Redirect\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n       return <React.Suspense fallback={<Preloader />}>\n       <Component {...props}/>\n       </React.Suspense>\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\n\n\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={ withSuspense(DialogsContainer) }/>\n\n\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n\nconst SamuraiApp = (props) => {\n     return (\n         <HashRouter>\n             <Provider store={store}>\n                 <AppContainer/>\n             </Provider>\n         </HashRouter>\n     )\n}\n\n\nexport default SamuraiApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiApp from './App';\n\n\nReactDOM.render(<SamuraiApp/>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/load.svg\";\nimport React from \"react\";\n\n\nlet Preloader = (props) => {\n    return (\n        <div style={ { backgroundColor: \"white\"} }>\n            <img src={preloader} />\n        </div>\n    )\n}\n\n\n\n\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2SPvv\",\"error\":\"FormControls_error__3zfBa\",\"formSummaryError\":\"FormControls_formSummaryError__2ffxR\"};","import React from \"react\";\nimport styles from \"./FormControls.module.css\"\n\n\n\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError =  meta.touched && meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\n\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return  <FormControl {...props}>  <textarea {...input} {...restProps} /> </FormControl>\n}\n\n\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return  <FormControl {...props}>  <input {...input} {...restProps} /> </FormControl>\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","\n\n\nexport const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It is my first post', likesCount: 11},\n        {id: 3, message: 'I am fine', likesCount: 11},\n        {id: 4, message: 'Blabla', likesCount: 11},\n    ],\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n\n        }\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id != action.postId)\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\n\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\n\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\n\nexport default profileReducer;\n"],"sourceRoot":""}